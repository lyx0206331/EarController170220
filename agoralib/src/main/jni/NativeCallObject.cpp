/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "io_iwhere_NativeCallObject.h"
#include "AgoraAudioFrameObserver.h"

AgoraAudioFrameObserver s_audioFrameObserver;

/*
 * Class:     io_iwhere_NativeCallObject
 * Method:    registerAudioFrameObserver
 * Signature: (Lio/iwhere/IAudioFrameListener;)V
 */
JNIEXPORT void JNICALL Java_io_iwhere_NativeCallObject_registerAudioFrameObserver
        (JNIEnv *env, jobject thiz, jobject obj) {
    s_audioFrameObserver.setJObserver(obj);
};

/*
 * Class:     io_iwhere_NativeCallObject
 * Method:    unregisterAudioFrameObserver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_iwhere_NativeCallObject_unregisterAudioFrameObserver
        (JNIEnv *env, jobject thiz) {
    s_audioFrameObserver.setJObserver(NULL);
};

/*
 * Class:     io_iwhere_NativeCallObject
 * Method:    getAudioFrame
 * Signature: ()Lio/iwhere/AgoraAudioFrame;
 */
JNIEXPORT jobject JNICALL Java_io_iwhere_NativeCallObject_getAudioFrame
        (JNIEnv *env, jobject thiz) {
    return thiz;
};

/*
 * Class:     io_iwhere_NativeCallObject
 * Method:    setData
 * Signature: (Lio/iwhere/AgoraAudioFrame;)V
 */
JNIEXPORT void JNICALL Java_io_iwhere_NativeCallObject_setData
        (JNIEnv *env, jobject thiz, jobject obj) {
    return;
};

extern "C" __attribute__((visibility("default"))) int
loadAgoraRtcEnginePlugin(agora::rtc::IRtcEngine *engine) {
    agora::util::AutoPtr<agora::media::IMediaEngine> mediaEngine;
    mediaEngine.queryInterface(*engine, agora::rtc::AGORA_IID_MEDIA_ENGINE);
    if (mediaEngine) {
        mediaEngine->registerAudioFrameObserver(&s_audioFrameObserver);
    }
    return 0;
}

extern "C" __attribute__((visibility("default"))) void
unloadAgoraRtcEnginePlugin(agora::rtc::IRtcEngine *engine) {
    agora::util::AutoPtr<agora::media::IMediaEngine> mediaEngine;
    mediaEngine.queryInterface(*engine, agora::rtc::AGORA_IID_MEDIA_ENGINE);
    if (mediaEngine) {
        mediaEngine->registerAudioFrameObserver(NULL);
    }
}



